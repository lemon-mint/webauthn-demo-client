let cid="";const new_credential=(g,a,b,c,d)=>{let e={publicKey:{rp:{name:g,id:window.location.host.split(":")[0]},challenge:hex2arr(c),user:{id:hex2arr(d),name:a,displayName:b},pubKeyCredParams:[{type:"public-key",alg:-7}],timeout:6e4,attestation:"none",extensions:{uvm:!0,exts:!0},authenticatorSelection:{userVerification:"preferred",requireResidentKey:!1},excludeCredentials:[]}};return navigator.credentials.create(e)},usekey=async(d,a)=>{const b=await navigator.credentials.get({publicKey:{challenge:hex2arr(d),userVerification:"preferred",allowCredentials:[{id:hex2arr(a),type:"public-key",transports:["usb","nfc","internal","ble"]}],timeout:6e4}});return console.log("authenticatorData:",arr2hex(b.response.authenticatorData)),console.log("clientDataJSON:",arr2hex(b.response.clientDataJSON)),console.log("sig:",arr2hex(b.response.signature)),b};function newkey(j){var a=CBOR.decode(j.attestationObject),b=a.authData;const c=new DataView(new ArrayBuffer(2)),d=b.slice(53,55);d.forEach((d,a)=>c.setUint8(a,d));const e=c.getUint16(),f=b.slice(55,55+e),g=b.slice(55+e),h=CBOR.decode(g.buffer);console.log("credentialId:",arr2hex(f)),console.log("Publickey X:",arr2hex(h["-2"])),console.log("Publickey Y:",arr2hex(h["-3"])),cid=arr2hex(f)}function arr2hex(b){return Array.prototype.map.call(new Uint8Array(b),b=>("00"+b.toString(16)).slice(-2)).join("")}function hex2arr(b){return new Uint8Array(b.match(/.{1,2}/g).map(b=>parseInt(b,16)))}window.addEventListener("load",function(){let g=document.getElementById("credentials_create"),a=document.getElementById("credentials_get"),h=document.getElementById("sitename"),c=document.getElementById("username"),d=document.getElementById("displayname"),e=document.getElementById("challenge");g.addEventListener("click",()=>{let f=new Uint8Array(16);window.crypto.getRandomValues(f);let a=new_credential(h.value,c.value,d.value,e.value,arr2hex(f));a.then(function(b){attestationResponse=b.response,newkey(attestationResponse)})}),a.addEventListener("click",()=>{""!=cid&&usekey(e.value,cid)})});
